from utils.utils import assert_status
from data.factories import generate_amount



class TestUpDeposit:
    def test_deposit_into_new_account(
            self,
            create_account,
            get_balance,
            deposit_money,
    ):
        """
        Step 1. Create new user. –§–∏–∫—Ç—É—Ä–∞: create_new_user
        Step 2. Authenticate user and return Basic Auth header. –§–∏–∫—Ç—É—Ä–∞: user_auth
        Step 3. Create a new account. –§–∏–∫—Ç—É—Ä–∞: create_account
        Step 4. Chek deposit before
        Step 5. Deposits money into the user's account. –§–∏–∫—Ç—É—Ä–∞: deposit_money
        Step 6. Chek deposit after
        Step 7. Compare what deposit before is equal deposit after
        """
        print(f' Test: Deposit money into new account')       #Debag
        acc = create_account()  # —Ñ–∞–±—Ä–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç dict
        acc_id = acc["account_id"]
        auth = acc["auth_header"]

        # –ë–∞–ª–∞–Ω—Å –¥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
        balance_before = get_balance(acc_id, auth)
        print(f"    üí∞ –ë–∞–ª–∞–Ω—Å –î–û: {balance_before}")       #Debag

        # Amount
        amount = generate_amount()
        assert amount > 0

        # –î–µ–ø–æ–∑–∏—Ç
        deposit_resp = deposit_money(account_id=acc_id, auth_header=auth, amount=amount)
        assert_status(resp=deposit_resp["response"], expected=200)
        print(f"    ‚úÖ –ê–∫–∫–∞—É–Ω—Ç —é–∑–µ—Ä–∞ (id = {deposit_resp['id']}) –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞: {amount}")       #Debag
        # print(deposit_resp)       # Debag

        # –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –¥–µ–ø–æ–∑–∏—Ç–∞
        balance_after = get_balance(acc_id, auth)
        print(f"    üí∞ –ë–∞–ª–∞–Ω—Å –ü–û–°–õ–ï: {balance_after}")       #Debag
        assert deposit_resp["response"].json()["balance"] == amount

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        assert balance_after == balance_before + amount, (
            f"‚ùå –ë–∞–ª–∞–Ω—Å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –æ–∂–∏–¥–∞–ª–∏ {balance_before + amount}, "
            f"–∞ –ø–æ–ª—É—á–∏–ª–∏ {balance_after}"
        )

        transactions = deposit_resp["response"].json().get('transactions', [])
        assert transactions, "üì≠ –°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—É—Å—Ç"
        assert transactions[0]['amount'] == amount
